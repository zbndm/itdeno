//deno-lint-ignore-file ban-unused-ignore
//deno-lint-ignore-file no-empty-interface
/*
 * THIS FILE IS AUTO-GENERATED, PLEASE DO NOT EDIT
 */

//Imports
import {Executor} from "@core/executors"
import type {before as _before, outcome as _outcome, payload} from "@core/executors"
import type {loose} from "@types"

/** <%= mod.about %> */
export class <%= mod.classname %> extends Executor<raw, args> {
  /** Constructor */
  constructor({defaults}:{defaults?:Partial<raw>} = {}) {
    super({...<%= mod.classname %>, defaults})
  }

  /** Execute executor */
  static async call(module: payload, args: raw, context = {} as loose) {
    const instance = await new (this.autoload())().ready
    return instance.call(module, args, context)
  }

  /** Prepared executor */
  static async prepare(args: Partial<raw>) {
    return await new this({defaults:args}).ready
  }

  /** Url */
  static readonly url = import.meta.url

  /** Definition */
  static readonly definition = <%- JSON.stringify(mod.definition) %>

}
export {<%= mod.classname %> as Executor}

/** Arguments */
export interface raw {
<%= generate(mod.definition.args, "raw") %>
}

/** Validated and transformed arguments */
export interface args {
<%= generate(mod.definition.args, "args") %>
}

/** Executor before execution */
export type before = _before<raw, args>

/** Executor outcome */
export type outcome = _outcome<raw, args>
